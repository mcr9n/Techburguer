/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import classes.Ingrediente;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Marcelo Piano
 */
public class Estoque extends javax.swing.JFrame {
    
    static ArrayList<Ingrediente> listaIngredientes;
    
    String botao_apertado;
    
    /**
     * Creates new form Estoque
     */
    public Estoque() {
        initComponents();
        setLocationRelativeTo(null);
        
        listaIngredientes = new ArrayList();
        
        //Habilitar ou desabilitar botoes:
        btnNovoEstoque.setEnabled(true);
        btnSalvarEstoque.setEnabled(false);
        btnCancelarEstoque.setEnabled(false);
        btnEditarEstoque.setEnabled(false);
        btnExcluirEstoque.setEnabled(false);
        btnPesquisarEstoque.setEnabled(true);
        btnOKEstoque.setEnabled(false);
        
        //Habilitar ou desabilitar campos de texto:
        txtNomeEstoque.setEnabled(false);
        txtQuantidadeEstoque.setEnabled(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlEstoque = new javax.swing.JPanel();
        lblEstoqueEstoque = new javax.swing.JLabel();
        txtNomeEstoque = new javax.swing.JTextField();
        lblNomeEstoque = new javax.swing.JLabel();
        lblQuantidadeEstoque = new javax.swing.JLabel();
        txtQuantidadeEstoque = new javax.swing.JTextField();
        btnOKEstoque = new javax.swing.JButton();
        scrlpnlEstoque = new javax.swing.JScrollPane();
        tblEstoque = new javax.swing.JTable();
        btnNovoEstoque = new javax.swing.JButton();
        btnSalvarEstoque = new javax.swing.JButton();
        btnCancelarEstoque = new javax.swing.JButton();
        btnEditarEstoque = new javax.swing.JButton();
        btnExcluirEstoque = new javax.swing.JButton();
        btnSairEstoque = new javax.swing.JButton();
        btnPesquisarEstoque = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblEstoqueEstoque.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblEstoqueEstoque.setText("Estoque");

        lblNomeEstoque.setText("Nome:");

        lblQuantidadeEstoque.setText("Quantidade:");

        btnOKEstoque.setText("OK");
        btnOKEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKEstoqueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlEstoqueLayout = new javax.swing.GroupLayout(pnlEstoque);
        pnlEstoque.setLayout(pnlEstoqueLayout);
        pnlEstoqueLayout.setHorizontalGroup(
            pnlEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstoqueLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEstoqueEstoque)
                    .addGroup(pnlEstoqueLayout.createSequentialGroup()
                        .addGroup(pnlEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblQuantidadeEstoque)
                            .addComponent(lblNomeEstoque))
                        .addGap(18, 18, 18)
                        .addGroup(pnlEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNomeEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(txtQuantidadeEstoque))
                        .addGap(18, 18, 18)
                        .addComponent(btnOKEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlEstoqueLayout.setVerticalGroup(
            pnlEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstoqueLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEstoqueEstoque)
                .addGap(18, 18, 18)
                .addGroup(pnlEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNomeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNomeEstoque)
                    .addComponent(btnOKEstoque))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlEstoqueLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantidadeEstoque)
                    .addComponent(txtQuantidadeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        tblEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Quantidade"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblEstoque.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEstoqueMouseClicked(evt);
            }
        });
        scrlpnlEstoque.setViewportView(tblEstoque);
        if (tblEstoque.getColumnModel().getColumnCount() > 0) {
            tblEstoque.getColumnModel().getColumn(0).setPreferredWidth(50);
            tblEstoque.getColumnModel().getColumn(1).setPreferredWidth(50);
        }

        btnNovoEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/new.png"))); // NOI18N
        btnNovoEstoque.setText("Novo");
        btnNovoEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoEstoqueActionPerformed(evt);
            }
        });

        btnSalvarEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/salvar1.png"))); // NOI18N
        btnSalvarEstoque.setText("Salvar");
        btnSalvarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarEstoqueActionPerformed(evt);
            }
        });

        btnCancelarEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/cancelar.png"))); // NOI18N
        btnCancelarEstoque.setText("Cancelar");
        btnCancelarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEstoqueActionPerformed(evt);
            }
        });

        btnEditarEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/editar.png"))); // NOI18N
        btnEditarEstoque.setText("Editar");
        btnEditarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEstoqueActionPerformed(evt);
            }
        });

        btnExcluirEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/excluir1.png"))); // NOI18N
        btnExcluirEstoque.setText("Excluir");
        btnExcluirEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirEstoqueActionPerformed(evt);
            }
        });

        btnSairEstoque.setText("Sair");
        btnSairEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairEstoqueActionPerformed(evt);
            }
        });

        btnPesquisarEstoque.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pesquisar.png"))); // NOI18N
        btnPesquisarEstoque.setText("Pesquisar");
        btnPesquisarEstoque.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarEstoqueActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(scrlpnlEstoque)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(247, 247, 247)
                        .addComponent(btnSairEstoque)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnNovoEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSalvarEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelarEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEditarEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnExcluirEstoque)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPesquisarEstoque)
                .addGap(32, 32, 32))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoEstoque)
                    .addComponent(btnSalvarEstoque)
                    .addComponent(btnCancelarEstoque)
                    .addComponent(btnEditarEstoque)
                    .addComponent(btnExcluirEstoque)
                    .addComponent(btnPesquisarEstoque))
                .addGap(18, 18, 18)
                .addComponent(scrlpnlEstoque, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSairEstoque)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void carregarTabelaIngredientes() {
        DefaultTableModel modelo = new DefaultTableModel(new Object[] {"Nome","Quantidade"},0);
        
        for(int i = 0; i < listaIngredientes.size(); i++){
            Object linha[] = new Object[]{listaIngredientes.get(i).getNome(),
                                          listaIngredientes.get(i).getQuantidade(),};
            modelo.addRow(linha);
        }
        
        //Tabela recebe o modelo DefaultTableModel:
        tblEstoque.setModel(modelo);
        
        tblEstoque.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblEstoque.getColumnModel().getColumn(1).setPreferredWidth(50);
    
    }
    
    private void btnSairEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairEstoqueActionPerformed
        // TODO add your handling code here:
        
        this.setVisible(false);
    }//GEN-LAST:event_btnSairEstoqueActionPerformed

    private void btnNovoEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoEstoqueActionPerformed
        // TODO add your handling code here:
        
        botao_apertado = "novo";
        
        //Habilitar ou desabilitar botoes:
        btnNovoEstoque.setEnabled(false);
        btnSalvarEstoque.setEnabled(true);
        btnCancelarEstoque.setEnabled(true);
        btnEditarEstoque.setEnabled(false);
        btnExcluirEstoque.setEnabled(false);
        btnPesquisarEstoque.setEnabled(false);
        btnOKEstoque.setEnabled(false);
        
        //Habilitar ou desabilitar campos de texto:
        txtNomeEstoque.setEnabled(true);
        txtQuantidadeEstoque.setEnabled(true);
        
        //Requisitar foco no primeiro txt:
        txtNomeEstoque.requestFocus();
    }//GEN-LAST:event_btnNovoEstoqueActionPerformed

    private void btnCancelarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEstoqueActionPerformed
        // TODO add your handling code here:
        
        //Habilitar ou desabilitar botoes:
        btnNovoEstoque.setEnabled(true);
        btnSalvarEstoque.setEnabled(false);
        btnCancelarEstoque.setEnabled(false);
        btnEditarEstoque.setEnabled(false);
        btnExcluirEstoque.setEnabled(false);
        btnPesquisarEstoque.setEnabled(true);
        btnOKEstoque.setEnabled(false);
        
        //Habilitar ou desabilitar campos de texto:
        txtNomeEstoque.setEnabled(false);
        txtQuantidadeEstoque.setEnabled(false);
    }//GEN-LAST:event_btnCancelarEstoqueActionPerformed

    private void btnSalvarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarEstoqueActionPerformed
        // TODO add your handling code here:
        
        if(txtNomeEstoque.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite o nome do ingrediente!", "Aviso.", JOptionPane.PLAIN_MESSAGE);
            txtNomeEstoque.requestFocus();
        }
        else if(txtQuantidadeEstoque.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite a quantidade do ingrediente!", "Aviso.", JOptionPane.PLAIN_MESSAGE);
            txtQuantidadeEstoque.requestFocus();
        }
        
        else{
            
            String nomeIngrediente = txtNomeEstoque.getText();
            int quantidadeIngrediente = Integer.parseInt(txtQuantidadeEstoque.getText());
            
            if(botao_apertado.equals("novo")){
                Ingrediente ingrediente = new Ingrediente(nomeIngrediente, quantidadeIngrediente);
                
                listaIngredientes.add(ingrediente);
                
                JOptionPane.showMessageDialog(null, "Ingrediente cadastrado com sucesso!", "Aviso", JOptionPane.PLAIN_MESSAGE);
            }
            
            else if(botao_apertado.equals("editar")){
                int index_tabela = tblEstoque.getSelectedRow();
                
                listaIngredientes.get(index_tabela).setNome(nomeIngrediente);
                listaIngredientes.get(index_tabela).setQuantidade(quantidadeIngrediente);
            }
            
            //Carregar os dados do Ingrediente na tabela:
            carregarTabelaIngredientes();
            
            //Limpar campos de texto:
            txtNomeEstoque.setText("");
            txtQuantidadeEstoque.setText("");
            
            //Habilitar ou desabilitar botoes:
            btnNovoEstoque.setEnabled(true);
            btnSalvarEstoque.setEnabled(false);
            btnCancelarEstoque.setEnabled(false);
            btnEditarEstoque.setEnabled(false);
            btnExcluirEstoque.setEnabled(false);
            btnPesquisarEstoque.setEnabled(true);
            btnOKEstoque.setEnabled(false);

            //Habilitar ou desabilitar campos de texto:
            txtNomeEstoque.setEnabled(false);
            txtQuantidadeEstoque.setEnabled(false);
            
        }
        
    }//GEN-LAST:event_btnSalvarEstoqueActionPerformed

    private void btnEditarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEstoqueActionPerformed
        // TODO add your handling code here:
        botao_apertado = "editar";
        
        //Habilitar ou desabilitar botoes:
        btnNovoEstoque.setEnabled(false);
        btnSalvarEstoque.setEnabled(true);
        btnCancelarEstoque.setEnabled(true);
        btnEditarEstoque.setEnabled(false);
        btnExcluirEstoque.setEnabled(false);
        btnPesquisarEstoque.setEnabled(false);
        btnOKEstoque.setEnabled(false);
            
        //Habilitar ou desabilitar campos de texto:
        txtNomeEstoque.setEnabled(true);
        txtQuantidadeEstoque.setEnabled(true);
        
        //Focar na primeira caixa de texto
        txtNomeEstoque.requestFocus();
    }//GEN-LAST:event_btnEditarEstoqueActionPerformed

    private void btnExcluirEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirEstoqueActionPerformed
        // TODO add your handling code here:
        
        int index_tabela = tblEstoque.getSelectedRow();
        
        if(index_tabela >= 0 && index_tabela < listaIngredientes.size()){
        listaIngredientes.remove(index_tabela);
        }
        
        //Carregar os dados do Ingrediente na tabela:
        carregarTabelaIngredientes();

        //Limpar campos de texto:
        txtNomeEstoque.setText("");
        txtQuantidadeEstoque.setText("");

        //Habilitar ou desabilitar botoes:
        btnNovoEstoque.setEnabled(true);
        btnSalvarEstoque.setEnabled(false);
        btnCancelarEstoque.setEnabled(false);
        btnEditarEstoque.setEnabled(false);
        btnExcluirEstoque.setEnabled(false);
        btnPesquisarEstoque.setEnabled(false);
        btnOKEstoque.setEnabled(false);

        //Habilitar ou desabilitar campos de texto:
        txtNomeEstoque.setEnabled(false);
        txtQuantidadeEstoque.setEnabled(false);
        
        
    }//GEN-LAST:event_btnExcluirEstoqueActionPerformed

    private void btnPesquisarEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarEstoqueActionPerformed
        // TODO add your handling code here:
        
        if(listaIngredientes.isEmpty()){
            JOptionPane.showMessageDialog(null, "Nenhum ingreduente cadastrado!", "Aviso.", JOptionPane.PLAIN_MESSAGE);
        }
        
        else{
            //Habilitar ou desabilitar botoes:
            btnNovoEstoque.setEnabled(false);
            btnSalvarEstoque.setEnabled(false);
            btnCancelarEstoque.setEnabled(true);
            btnEditarEstoque.setEnabled(false);
            btnExcluirEstoque.setEnabled(false);
            btnPesquisarEstoque.setEnabled(false);
            btnOKEstoque.setEnabled(true);
            
            //Habilitar ou desabilitar campos de texto:
            txtNomeEstoque.setEnabled(true);
            txtQuantidadeEstoque.setEnabled(false);

            txtNomeEstoque.requestFocus();
        }
    }//GEN-LAST:event_btnPesquisarEstoqueActionPerformed

    private void btnOKEstoqueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKEstoqueActionPerformed
        // TODO add your handling code here:
        
        if(txtNomeEstoque.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O Nome do ingrediente deve ser informado!", "Aviso.", JOptionPane.PLAIN_MESSAGE);
        }
        
        else{
            Ingrediente ing;
            
            String nome = "", quantidade = "";
            
            String nomePesquisado = txtNomeEstoque.getText();
            
            for(int i = 0; i < listaIngredientes.size(); i++){
                ing = listaIngredientes.get(i);
                
                if(nomePesquisado.equals(ing.getNome())){
                    nome = ing.getNome();
                    quantidade = String.valueOf(ing.getQuantidade());
                }
            }
            
            if(nome.equals("")){
                JOptionPane.showMessageDialog(null, "Este ingrediente não está no sistema!", "Aviso", JOptionPane.PLAIN_MESSAGE);
                
                //Limpar campos de texto:
                txtNomeEstoque.setText("");
                txtQuantidadeEstoque.setText("");
            }
            
            else{
                txtNomeEstoque.setText(nome);
                txtQuantidadeEstoque.setText(quantidade);
            }
            
            txtNomeEstoque.selectAll();
            txtNomeEstoque.requestFocus();
        }
        
    }//GEN-LAST:event_btnOKEstoqueActionPerformed

    private void tblEstoqueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEstoqueMouseClicked
        // TODO add your handling code here:
        
        //Guardar indice da linha selecionada:
        int indiceLinha = tblEstoque.getSelectedRow();
        
        //verificar se a linha é válida:
        if(indiceLinha >= 0 && indiceLinha < listaIngredientes.size()){
            Ingrediente ing = listaIngredientes.get(indiceLinha);
            
            txtNomeEstoque.setText(ing.getNome());
            txtQuantidadeEstoque.setText(String.valueOf(ing.getQuantidade()));
            
            //Habilitar ou desabilitar botoes:
            btnNovoEstoque.setEnabled(false);
            btnSalvarEstoque.setEnabled(false);
            btnCancelarEstoque.setEnabled(true);
            btnEditarEstoque.setEnabled(true);
            btnExcluirEstoque.setEnabled(true);
            btnPesquisarEstoque.setEnabled(false);
            btnOKEstoque.setEnabled(false);
            
            //Habilitar ou desabilitar campos de texto:
            txtNomeEstoque.setEnabled(false);
            txtQuantidadeEstoque.setEnabled(false);
       
        }
    }//GEN-LAST:event_tblEstoqueMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Estoque.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Estoque().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarEstoque;
    private javax.swing.JButton btnEditarEstoque;
    private javax.swing.JButton btnExcluirEstoque;
    private javax.swing.JButton btnNovoEstoque;
    private javax.swing.JButton btnOKEstoque;
    private javax.swing.JButton btnPesquisarEstoque;
    private javax.swing.JButton btnSairEstoque;
    private javax.swing.JButton btnSalvarEstoque;
    private javax.swing.JLabel lblEstoqueEstoque;
    private javax.swing.JLabel lblNomeEstoque;
    private javax.swing.JLabel lblQuantidadeEstoque;
    private javax.swing.JPanel pnlEstoque;
    private javax.swing.JScrollPane scrlpnlEstoque;
    private javax.swing.JTable tblEstoque;
    private javax.swing.JTextField txtNomeEstoque;
    private javax.swing.JTextField txtQuantidadeEstoque;
    // End of variables declaration//GEN-END:variables
}
